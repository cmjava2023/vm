Classfile /home/florian/Documents/fh/WS23_24/Compilerbau/vm/main/tests/data/exceptions/uncaught/Main.class
  Last modified 07.01.2024; size 663 bytes
  MD5 checksum cfde89719e32996de2858e25ba208c0c
  Compiled from "Main.java"
public class org.cmjava2023.Main
  minor version: 0
  major version: 52
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
   #1 = Methodref          #9.#26         // java/lang/Object."<init>":()V
   #2 = Class              #27            // java/lang/Throwable
   #3 = String             #28            // Oops
   #4 = Methodref          #2.#29         // java/lang/Throwable."<init>":(Ljava/lang/String;)V
   #5 = Fieldref           #30.#31        // java/lang/System.out:Ljava/io/PrintStream;
   #6 = String             #32            // anyway
   #7 = Methodref          #33.#34        // java/io/PrintStream.println:(Ljava/lang/String;)V
   #8 = Class              #35            // org/cmjava2023/Main
   #9 = Class              #36            // java/lang/Object
  #10 = Utf8               <init>
  #11 = Utf8               ()V
  #12 = Utf8               Code
  #13 = Utf8               LineNumberTable
  #14 = Utf8               LocalVariableTable
  #15 = Utf8               this
  #16 = Utf8               Lorg/cmjava2023/Main;
  #17 = Utf8               main
  #18 = Utf8               ([Ljava/lang/String;)V
  #19 = Utf8               args
  #20 = Utf8               [Ljava/lang/String;
  #21 = Utf8               StackMapTable
  #22 = Class              #27            // java/lang/Throwable
  #23 = Utf8               Exceptions
  #24 = Utf8               SourceFile
  #25 = Utf8               Main.java
  #26 = NameAndType        #10:#11        // "<init>":()V
  #27 = Utf8               java/lang/Throwable
  #28 = Utf8               Oops
  #29 = NameAndType        #10:#37        // "<init>":(Ljava/lang/String;)V
  #30 = Class              #38            // java/lang/System
  #31 = NameAndType        #39:#40        // out:Ljava/io/PrintStream;
  #32 = Utf8               anyway
  #33 = Class              #41            // java/io/PrintStream
  #34 = NameAndType        #42:#37        // println:(Ljava/lang/String;)V
  #35 = Utf8               org/cmjava2023/Main
  #36 = Utf8               java/lang/Object
  #37 = Utf8               (Ljava/lang/String;)V
  #38 = Utf8               java/lang/System
  #39 = Utf8               out
  #40 = Utf8               Ljava/io/PrintStream;
  #41 = Utf8               java/io/PrintStream
  #42 = Utf8               println
{
  public org.cmjava2023.Main();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 3: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/cmjava2023/Main;

  public static void main(java.lang.String[]) throws java.lang.Throwable;
    descriptor: ([Ljava/lang/String;)V
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=1
         0: new           #2                  // class java/lang/Throwable
         3: dup
         4: ldc           #3                  // String Oops
         6: invokespecial #4                  // Method java/lang/Throwable."<init>":(Ljava/lang/String;)V
         9: athrow
        10: astore_1
        11: getstatic     #5                  // Field java/lang/System.out:Ljava/io/PrintStream;
        14: ldc           #6                  // String anyway
        16: invokevirtual #7                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        19: aload_1
        20: athrow
      Exception table:
         from    to  target type
             0    11    10   any
      LineNumberTable:
        line 6: 0
        line 8: 10
        line 9: 19
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  args   [Ljava/lang/String;
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    Exceptions:
      throws java.lang.Throwable
}
SourceFile: "Main.java"
